What is Bubble Sort?
    *Bubble Sort is the simplest sorting algorithm:
    *Repeatedly compares two adjacent elements.
    *Swaps them if they are in the wrong order.
    *After each pass, the largest element "bubbles" to the end.

    Algorithm Steps:
        1.Start from the first element.
        2.Compare it with the next element.
        3.If the first is greater than the second, swap them.
        4.Move to the next pair and repeat until the end.
        5.Repeat the process for n-1 passes (or until no swaps happen).

        code:
            import java.util.Arrays;
            public class BubbleSortExample {
                public static void main(String[] args) {
                    int[] arr = {5, 1, 4, 2, 8};

                    bubbleSort(arr);

                    System.out.println("Sorted array: " + Arrays.toString(arr));
                }

                static void bubbleSort(int[] arr) {
                    int n = arr.length;
                    boolean swapped;

                    for (int i = 0; i < n - 1; i++) {
                        swapped = false;

                        // Compare adjacent elements
                        for (int j = 0; j < n - i - 1; j++) {
                            if (arr[j] > arr[j + 1]) {
                                // Swap
                                int temp = arr[j];
                                arr[j] = arr[j + 1];
                                arr[j + 1] = temp;
                                swapped = true;
                            }
                        }

                        // If no swaps happened, array is already sorted
                        if (!swapped) break;
                    }
                }
            }

Complexity:
    *Worst Case: O(nÂ²)
    *Best Case: O(n) (already sorted, with swapped check)
    *Space: O(1) (in-place)
    *Stability: Yes (does not change the order of equal elements).
